apiVersion: v1
kind: ConfigMap
data:
  application.resourceTrackingMethod: annotation
  resource.customizations: "\"*.upbound.io/*\":\n  health.lua: |\n    health_status = {\n      status = \"Progressing\",\n      message = \"Provisioning ...\"\n    }\n      #magic___^_^___line\n    local function contains (table, val)\n      for i, v in ipairs(table) do\n        if v == val then\n          return true\n        end\n      end\n      return false\n    end\n          #magic___^_^___line\n    local has_no_status = {\n      \"ProviderConfig\",\n      \"ProviderConfigUsage\"\n    }\n          #magic___^_^___line\n    if obj.status == nil and contains(has_no_status, obj.kind) then\n      health_status.status = \"Healthy\"\n      health_status.message = \"Resource is up-to-date.\"\n      return health_status\n    end\n          #magic___^_^___line\n    if obj.status == nil or obj.status.conditions == nil then\n      if obj.kind == \"ProviderConfig\" and obj.status.users ~= nil then\n        health_status.status = \"Healthy\"\n        health_status.message = \"Resource is in use.\"\n        return health_status\n      end\n      return health_status\n    end\n          #magic___^_^___line\n    for i, condition in ipairs(obj.status.conditions) do\n      if condition.type == \"LastAsyncOperation\" then\n        if condition.status == \"False\" then\n          health_status.status = \"Degraded\"\n          health_status.message = condition.message\n          return health_status\n        end\n      end\n          #magic___^_^___line\n      if condition.type == \"Synced\" then\n        if condition.status == \"False\" then\n          health_status.status = \"Degraded\"\n          health_status.message = condition.message\n          return health_status\n        end\n      end\n          #magic___^_^___line\n      if condition.type == \"Ready\" then\n        if condition.status == \"True\" then\n          health_status.status = \"Healthy\"\n          health_status.message = \"Resource is up-to-date.\"\n          return health_status\n        end\n      end\n    end\n          #magic___^_^___line\n    return health_status\n          #magic___^_^___line\n\"*.crossplane.io/*\":\n  health.lua: |\n    health_status = {\n      status = \"Progressing\",\n      message = \"Provisioning ...\"\n    }\n          #magic___^_^___line\n    local function contains (table, val)\n      for i, v in ipairs(table) do\n        if v == val then\n          return true\n        end\n      end\n      return false\n    end\n          #magic___^_^___line\n    local has_no_status = {\n      \"Composition\",\n      \"CompositionRevision\",\n      \"DeploymentRuntimeConfig\",\n      \"ControllerConfig\",\n      \"ProviderConfig\",\n      \"ProviderConfigUsage\"\n    }\n    if obj.status == nil and contains(has_no_status, obj.kind) then\n        health_status.status = \"Healthy\"\n        health_status.message = \"Resource is up-to-date.\"\n      return health_status\n    end\n          #magic___^_^___line\n    if obj.status == nil or obj.status.conditions == nil then\n        if obj.kind == \"ProviderConfig\" and obj.status.users ~= nil then\n          health_status.status = \"Healthy\"\n          health_status.message = \"Resource is in use.\"\n          return health_status\n        end\n      return health_status\n    end\n          #magic___^_^___line\n    for i, condition in ipairs(obj.status.conditions) do\n      if condition.type == \"LastAsyncOperation\" then\n        if condition.status == \"False\" then\n          health_status.status = \"Degraded\"\n          health_status.message = condition.message\n          return health_status\n        end\n      end\n          #magic___^_^___line\n      if condition.type == \"Synced\" then\n        if condition.status == \"False\" then\n          health_status.status = \"Degraded\"\n          health_status.message = condition.message\n          return health_status\n        end\n      end\n          #magic___^_^___line\n      if contains({\"Ready\", \"Healthy\", \"Offered\", \"Established\"}, condition.type) then\n        if condition.status == \"True\" then\n          health_status.status = \"Healthy\"\n          health_status.message = \"Resource is up-to-date.\"\n          return health_status\n        end\n      end\n    end\n          #magic___^_^___line\n    return health_status    \n"
